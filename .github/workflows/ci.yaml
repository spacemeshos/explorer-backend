name: CI

env:
  go-version: '1.23.0'

# Trigger the workflow on all pull requests, and on push to specific branches
on:
  # run for all pull requests and pushes to certain branches
  pull_request:

jobs:
  ## stage 0: check which files were changed
  filter-changes:
    runs-on: ubuntu-latest
    outputs:
      nondocchanges: ${{ steps.filter.outputs.nondoc }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          # this pattern matches using picomatch syntax (used by this third party Action), which is slightly
          # different than GitHub syntax: it matches any file in any path ending in '.md'. this checks if
          # any non-markdown files were changed.
          filters: |
            nondoc:
              - '!**/*.md'

  golangci:
    name: lint
    runs-on: ubuntu-latest
    needs: filter-changes
    if: ${{ needs.filter-changes.outputs.nondocchanges == 'true' }}
    timeout-minutes: 10
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.go-version }}
      - uses: actions/checkout@v4
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.60.3
          only-new-issues: true
          args: --timeout=10m --config=.golangci.yml --out-format=github-actions

  docker-push:
    runs-on: ubuntu-latest
    needs: golangci
    steps:
      - uses: actions/checkout@v4

      - name: Docker meta stats api
        id: meta_statsapi
        uses: docker/metadata-action@v4
        with:
          images: spacemeshos/explorer-stats-api-dev

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: docker/build-push-action@v2
        with:
          context: .
          repository: spacemeshos/explorer-stats-api-dev
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta_statsapi.outputs.tags }}